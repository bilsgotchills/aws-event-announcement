import { DynamoDBClient, ScanCommand } from "@aws-sdk/client-dynamodb";

const dynamo = new DynamoDBClient({ region: process.env.AWS_REGION });

export const handler = async () => {
  try {
    // Get all items from DynamoDB
    const result = await dynamo.send(new ScanCommand({
      TableName: process.env.DYNAMO_TABLE
    }));

    // Convert DynamoDB format to plain JSON
    let events = result.Items.map(item => ({
      eventId: item.eventId.S,
      name: item.name.S,
      date: item.date.S,
      description: item.description.S,
      fileUrl: item.fileUrl?.S || null,
      createdAt: item.createdAt?.S || null
    }));

    // âœ… Sort by createdAt (newest first)
    events.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));

    return {
      statusCode: 200,
      body: JSON.stringify(events),
      headers: {
        "Access-Control-Allow-Origin": "*", // allow CORS
        "Access-Control-Allow-Headers": "Content-Type"
      }
    };

  } catch (err) {
    console.error("Error fetching events:", err);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: err.message }),
      headers: {
        "Access-Control-Allow-Origin": "*"
      }
    };
  }
};
